name: deploy dev
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  tagging:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get semantic versioning
        id: versioning
        uses: paulhatch/semantic-version@v5.0.2
        with:   
          branch: dev
          tag_prefix: "v"
          major_pattern: "BREAKING CHANGE"
          minor_pattern: "feat"
          version_format: "${major}.${minor}.${patch}"

      - name: Test
        run: |
          npm install
          npm run test

      - name: Update version in package.json and add tag to git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          npm version v${{ steps.versioning.outputs.version }}
          git push --follow-tags

  deploy-app:
    needs: tagging
    runs-on: ubuntu-latest
    env:
      HOST: ${{ secrets.EC2_HOST }}
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      MONGO_USER: ${{ secrets.MONGO_USER }}
      MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
      MONGO_PORT: ${{ secrets.MONGO_DEV_PORT }}
      PORT: 8080
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/suigetsu-project:latest

      - name: Prepare SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/key.pem
          chmod 600 ~/.ssh/key.pem

      - name: Deploy via Docker Compose
        run: |
          ssh -i ~/.ssh/key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd suigetsu-project
            docker-compose -f docker-compose.dev.yml down
            docker-compose -f docker-compose.dev.yml pull
            docker-compose -f docker-compose.dev.yml up -d
          EOF
